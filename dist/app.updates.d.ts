import { Context } from "telegraf";
import { AppService } from "./app.service";
export declare class AppUpdate {
    private readonly appService;
    constructor(appService: AppService);
    onStart(ctx: Context): Promise<void>;
    registrtion(ctx: Context): Promise<void>;
    hearsMaster(ctx: Context): Promise<void>;
    actionService(ctx: Context): Promise<void>;
    onContact(ctx: Context): Promise<void>;
    next(ctx: Context): Promise<void>;
    onLocation(ctx: Context): Promise<void>;
    confirm(ctx: Context): Promise<void>;
    cancelConfirm(ctx: Context): Promise<void>;
    allowThisMaster(ctx: Context): Promise<void>;
    noAllowThisMaster(ctx: Context): Promise<void>;
    blockThis(ctx: Context): Promise<void>;
    checkStatus(ctx: Context): Promise<void>;
    sendMessage(ctx: Context): Promise<void>;
    cancelRegistration(ctx: Context): Promise<void>;
    hearsClients(ctx: Context): Promise<void>;
    hearsRating(ctx: Context): Promise<void>;
    hearsTime(ctx: Context): Promise<void>;
    onSearch(ctx: Context): Promise<void>;
    booking(ctx: Context): Promise<void>;
    bookedwithuser(ctx: Context): Promise<void>;
    bookedwithMe(ctx: Context): Promise<void>;
    fullDayNotBusy(ctx: Context): Promise<void>;
    fullDayBusy(ctx: Context): Promise<void>;
    toBackDates(ctx: Context): Promise<void>;
    hearsUpdateInfo(ctx: Context): Promise<void>;
    changeName(ctx: Context): Promise<void>;
    changePhone(ctx: Context): Promise<void>;
    changeservice_name(ctx: Context): Promise<void>;
    changeaddress(ctx: Context): Promise<void>;
    changetarget(ctx: Context): Promise<void>;
    changelocation(ctx: Context): Promise<void>;
    changestart_time(ctx: Context): Promise<void>;
    changeend_time(ctx: Context): Promise<void>;
    changetime_per_work(ctx: Context): Promise<void>;
    tomainmenu(ctx: Context): Promise<void>;
    onMessage(ctx: Context): Promise<void>;
}
