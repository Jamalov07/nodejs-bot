import { Context, Telegraf } from "telegraf";
import { User } from "./models/user.model";
import { Service_type } from "./models/service_type.model";
import { Master } from "./models/master.model";
import { Order } from "./models/order.model";
import { Admin } from "./models/admin.model";
import { Ranking } from "./models/ranking.model";
export declare class AppService {
    private userRepository;
    private serviceRepository;
    private masterRepository;
    private orderRepository;
    private adminRepository;
    private rankingRepository;
    private readonly bot;
    constructor(userRepository: typeof User, serviceRepository: typeof Service_type, masterRepository: typeof Master, orderRepository: typeof Order, adminRepository: typeof Admin, rankingRepository: typeof Ranking, bot: Telegraf<Context>);
    onStart(ctx: Context): Promise<void>;
    registration(ctx: Context): Promise<void>;
    hearsMaster(ctx: Context): Promise<void>;
    hearsServiceTypes(ctx: Context): Promise<void>;
    onMessage(ctx: Context): Promise<void>;
    onContact(ctx: Context): Promise<void>;
    hearsNext(ctx: Context): Promise<void>;
    onLocation(ctx: Context): Promise<void>;
    onLocationMijoz(ctx: any): Promise<void>;
    requestToAdmin(ctx: Context): Promise<void>;
    cancelRegistration(ctx: Context): Promise<void>;
    confirmInAdmin(ctx: Context): Promise<void>;
    checkStatusMaster(ctx: Context): Promise<void>;
    noAllow(ctx: Context): Promise<void>;
    toBlock(ctx: Context): Promise<void>;
    sendMessageToAdmin(ctx: Context): Promise<void>;
    hearsMijozlarInMaster(ctx: Context): Promise<void>;
    hearsRating(ctx: Context): Promise<void>;
    hearsTime(ctx: Context): Promise<void>;
    actionSearchForDay(ctx: Context): Promise<void>;
    bookingWithMaster(ctx: Context): Promise<void>;
    bookedWithUser(ctx: Context): Promise<void>;
    bookedWithMeUpdate(ctx: Context): Promise<void>;
    fullDayNotBusy(ctx: Context): Promise<void>;
    busyFullDayMaster(ctx: Context): Promise<void>;
    toBack(ctx: Context): Promise<void>;
    updateMasterInfos(ctx: Context): Promise<void>;
    actionChange(ctx: Context, state: string): Promise<void>;
    tomainmenu(ctx: Context): Promise<void>;
    helper(ctx: Context, dateMatch: string, master: Master): Promise<void>;
    complectMasters(ctx: Context): Promise<void>;
    onMijoz(ctx: Context): Promise<void>;
    onPaginationName(ctx: any): Promise<void>;
    onPaginationRating(ctx: any): Promise<void>;
    onPaginationLocation(ctx: any): Promise<void>;
    onPaginationTime(ctx: any): Promise<void>;
    changeMijozData(ctx: Context): Promise<void>;
    changeName(ctx: Context): Promise<void>;
    changeNumber(ctx: Context): Promise<void>;
    orqaga(ctx: Context): Promise<void>;
    onServices(ctx: Context): Promise<void>;
    selectServices(ctx: any): Promise<void>;
    serachNameMijoz(ctx: any): Promise<void>;
    serachRatingMijoz(ctx: any): Promise<void>;
    selectMaster(ctx: any): Promise<void>;
    showLocation(ctx: any): Promise<void>;
    toRankings(ctx: any): Promise<void>;
    getRank(ctx: any): Promise<void>;
    getDays(ctx: any): Promise<void>;
    getTimes(ctx: any): Promise<void>;
    tanlanganHizmatlar(ctx: any): Promise<void>;
    sendSmsMaster(ctx: any): Promise<void>;
    confirmMessage(ctx: any): Promise<void>;
}
